fn distance(x1: float, x2: float, y1: float, y2:float): float{
        return sqrt(pow(x2-x1, 2.) + pow(y2-y1, 2.))
}

fn set_pixel(i: int, j:int, rad: float, width: float): rgba {
        let dist = distance(to_float(i), 300., to_float(j), 400.)
        
        let outside = rad + (width/2.)
        let inside = rad - (width/2.)
        let valid = dist < outside && dist > inside
        
        return if valid then rgba {1., 1., 1., 1.} else rgba {0., 0., 0., 1.}   
}

fn circle(rad : float, width : float) : rgba[,] {
        let circle_image = array[i: 600, j: 800] \
                set_pixel(i, j, rad, width)
        return circle_image
}

write image circle(400.0, 10.0) to "circle.png"
